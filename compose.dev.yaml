version: "3"

name: "shopacc-fake-dev"

services:
  client:
    container_name: shopacc-fake-client-dev
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - 5173:5173
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - shopacc-devnet

  server:
    container_name: shopacc-fake-server-dev
    build:
      context: ./server
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORT=3000
      - ASPNETCORE_HTTPs_PORT=7002
    ports:
      - 3000:3000
      - 7002:7002
    volumes:
      - ./server:/app
      - /app/obj/
      - /app/bin/
    networks:
      - shopacc-devnet
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy

  database:
    container_name: shopacc-fake-database-dev
    image: mcr.microsoft.com/mssql/server:2019-CU27-ubuntu-20.04
    env_file:
      - .database-env.development
    ports:
      - 1463:1433
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - shopacc-devnet
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $${MSSQL_SA_PASSWORD} -Q 'SELECT 1' -b -o /dev/null",
        ]
      interval: 1s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    container_name: shopacc-fake-redis-dev
    image: redis:alpine
    volumes:
      - redis-data:/data
    ports:
      - 6389:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 20s
      retries: 5
      start_period: 30s
    networks:
      - shopacc-devnet

volumes:
  sqlserver-data:
  redis-data:

networks:
  shopacc-devnet:
